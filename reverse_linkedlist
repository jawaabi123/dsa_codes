https://leetcode.com/problems/reverse-linked-list/description/

code1(iterative):
class Solution {
public:
    ListNode* reverseList(ListNode* head) 
    {
            if(head == NULL || head->next == NULL){
            return head;
        }
        ListNode* current=head;
        ListNode* prev=NULL;
        ListNode* forw=NULL;
        while(current!=NULL)
        {
            forw=current->next;
            current->next=prev;
            prev=current;
            current=forw;
        }
        return prev;
    }
};

code2(recursive):

class Solution {
public:
ListNode* reverse(ListNode* head)
{
    if(head==NULL || head->next==NULL)
    {
      return head;
    } 
    ListNode* final_head=reverse(head->next);
    head->next->next=head;
    head->next=NULL;
    return final_head;
}

ListNode* reverseList(ListNode* head) 
    {
            return reverse(head);
    }
};
